---
description: Angular Conventional Commits guidelines
globs: 
alwaysApply: true
---
# Conventional Commits (Angular Style)

## Format
```
<type>(<scope>): <subject>

<body>

<footer>
```

## Types
- `feat`: New feature for the user
- `fix`: Bug fix for the user
- `docs`: Documentation only changes
- `style`: Changes that do not affect the meaning of the code (formatting, etc.)
- `refactor`: Code change that neither fixes a bug nor adds a feature
- `perf`: Code change that improves performance
- `test`: Adding missing tests or correcting existing tests
- `chore`: Changes to the build process or auxiliary tools
- `ci`: Changes to CI configuration files and scripts
- `build`: Changes that affect the build system or external dependencies

## Scope (optional)
The scope should be the name of the component affected. Examples:
- `auth`
- `api`
- `db`
- `ui`
- `config`

## Subject
- Use imperative, present tense: "change" not "changed" nor "changes"
- Don't capitalize first letter
- No dot (.) at the end
- Limit to 50 characters

## Body (optional)
- Use imperative, present tense
- Include motivation for the change and contrast with previous behavior
- Wrap at 72 characters

## Footer (optional)
- **Breaking Changes**: must start with `BREAKING CHANGE:` followed by space or two newlines. The rest is description
- **Issues**: Reference issues that this commit closes/relates to
  - `Closes #123`
  - `Fixes #456`
  - `Relates to #789`

## Examples

### Feature commit
```
feat(auth): add JWT token validation

Implement server-side validation for JWT tokens
- Check token signature
- Verify expiration time
- Validate user claims

Closes #123
```

### Bug fix
```
fix(api): handle null response from external service

Previously, the API would crash when external service
returned null. Now it gracefully handles the error
and returns appropriate fallback data.

Fixes #456
```

### Breaking change
```
refactor(db): change user schema structure

BREAKING CHANGE: The user object now uses 'id' instead of 'userId'
All client code must update references to use the new field name.

- Rename userId to id in database schema
- Update all queries to use new field name
- Add migration script for existing data
```

### Simple commit
```
docs(readme): update installation instructions
```

### With scope
```
feat(ui): add dark mode toggle

Add a toggle button in the header to switch between
light and dark themes. The preference is saved
in localStorage.
```

## Additional Rules
- Commits must be written in English
- Use empty line between subject and body
- Use empty line between body and footer
- Reference issue numbers when applicable
- For breaking changes, explain migration path